name: End-to-end test

on:
  workflow_call:
    inputs:
      timestamp:
        required: true
        type: string
      cache-key:
        required: true
        type: string

env:
  REPO-OWNER: ${{ github.repository_owner }}

jobs:
  android-e2e-test-actions:
    name: End-to-end test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - arch: x86_64
            api-level: 30
    env:
      CACHE-KEY: ${{ inputs.cache-key }}
    continue-on-error: true #temporary while e2e is still flaky
    steps:
      - name: Set envs for zingolib CI
        if: ${{ contains(github.repository, 'zingolib') }}
        run: echo "REPO-OWNER=zingolabs" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO-OWNER }}/zingo-mobile

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Pull regchest docker image
        run: docker pull zingodevops/regchest:007

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.2
          build-root-directory: ./android
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/dev'}}

      - name: Native rust cache
        uses: actions/cache/restore@v4
        with:
          path: android/app/src/main/jniLibs/${{ matrix.arch }}
          key: native-android-uniffi-${{ matrix.arch }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true

      - name: Kotlin uniffi cache
        uses: actions/cache/restore@v4
        with:
          path: android/app/build/generated/source/uniffi/debug/java/uniffi/zingo
          key: kotlin-android-uniffi-${{ matrix.arch }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true

      - name: Restore AVD cache
        uses: actions/cache/restore@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.arch }}-api-${{ matrix.api-level }}-e2e

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Save AVD cache
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        id: avd-cache-saving
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.arch }}-api-${{ matrix.api-level }}-e2e

      - name: Yarn install
        run: yarn

      - name: Run Detox Build
        run: yarn detox build -c android.emu.release -n test

      - name: Yarn Start
        run: nohup yarn start > "yarn_react_native_start.out" &

      - name: Run Detox Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: yarn detox test -c android.emu.release -n test e2e/new_wallet.test.js
