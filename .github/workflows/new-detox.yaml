# .github/workflows/e2e-android.yml
name: e2e-android
on:
  pull_request:
  push:
    branches: [main, dev, stable]
  workflow_dispatch:

env:
  CACHE-KEY: ${{ inputs.cache-key }}
  TIMESTAMP: ${{ inputs.timestamp }}
  ABI: ${{ inputs.abi }}
  REPO-OWNER: ${{ github.repository_owner }}
  RUSTFLAGS: -D warnings

jobs:
  e2e-android:
    runs-on: macos-14
    strategy:
      matrix:
        include:
          - arch: arm64-v8a
            api-level: 30

    steps:
      - name: Set envs for x86_64
        if: ${{ env.ABI == 'x86_64' }}
        run: echo "AVD-ARCH=x86_64" >> $GITHUB_ENV

      - name: Set envs for x86
        if: ${{ env.ABI == 'x86' }}
        run: echo "AVD-ARCH=x86" >> $GITHUB_ENV

      - name: Set envs for arm64-v8a
        if: ${{ env.ABI == 'arm64-v8a' }}
        run: echo "AVD-ARCH=x86_64" >> $GITHUB_ENV

      - name: Set envs for armeabi-v7a
        if: ${{ env.ABI == 'armeabi-v7a' }}
        run: echo "AVD-ARCH=x86" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup yarn
        run: npm install -g yarn

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v4
        with:
          cache: yarn

      - name: Install Yarn dependencies
        run: yarn install --prefer-offline

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          cache: gradle
          distribution: temurin
          java-version: 17

      - name: AVD cache
        uses: actions/cache/restore@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.AVD-ARCH }}-e2e
          lookup-only: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'tools platform-tools'

      # - name: Cargo cache
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     workspaces: rust

      - name: Cargo default nightly
        run: rustup default nightly

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 60
          max_attempts: 3
          command: ./scripts/e2e_tests.sh -a ${{ env.AVD-ARCH }} -s

      - name: AVD cache saving
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        id: avd-cache-saving
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.AVD-ARCH }}-e2e

      - name: Native rust cache
        uses: actions/cache/restore@v4
        with:
          path: android/app/src/main/jniLibs/${{ matrix.arch }}
          key: native-android-uniffi-${{ matrix.arch }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true

      - name: Kotlin uniffi cache
        uses: actions/cache/restore@v4
        with:
          path: android/app/build/generated/source/uniffi/debug/java/uniffi/zingo
          key: kotlin-android-uniffi-${{ matrix.arch }}-${{ env.CACHE-KEY }}
          fail-on-cache-miss: true

      - name: Cargo uniffi kotlin
        working-directory: ./rust/lib
        run: |
          cargo run --release --features=uniffi/cli --bin uniffi-bindgen \
          generate ./src/zingo.udl --language kotlin \
          --out-dir ../../android/app/build/generated/source/uniffi/debug/java

      - name: Cache Detox build
        id: cache-detox-build
        uses: actions/cache@v3
        with:
          path: android/app/build
          key: ${{ runner.os }}-detox-build
          restore-keys: |
            ${{ runner.os }}-detox-build

      - name: Detox build
        run: yarn detox build --configuration android.emu.debug

      # - name: Print devices
      #   run: adb devices

      - name: Print files
        run: ls -al

      - name: Get device name
        working-directory:
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./.detoxrc.js').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT

      - name: Detox test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          script: yarn detox test --configuration android.emu.debug --headless --record-logs all

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: detox-artifacts
          path: artifacts
