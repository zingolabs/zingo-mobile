// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component LoadedApp - test LoadedApp - snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      [
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        {
          "right": 250,
        },
      ]
    }
  >
    <View
      style={
        {
          "height": "100%",
        }
      }
    >
      <RCTScrollView
        contentContainerStyle={
          {
            "display": "flex",
          }
        }
        scrollsToTop={false}
        style={
          {
            "backgroundColor": "#010101",
            "flex": 1,
            "height": 1334,
            "width": 750,
          }
        }
      >
        <View>
          <Text
            style={
              {
                "color": "rgb(28, 28, 30)",
                "fontSize": 18,
                "fontWeight": "600",
                "marginLeft": 30,
                "marginVertical": 10,
                "opacity": 1,
              }
            }
          >
            text translated
          </Text>
          <View
            style={
              {
                "backgroundColor": "rgb(0, 122, 255)",
                "height": 1,
              }
            }
          />
          <View
            style={
              {
                "display": "flex",
                "marginLeft": 20,
              }
            }
          >
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.about"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.settings"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.addressbook"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.walletseedufvk"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.insight"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
              testID="menu.tipzingolabs"
            >
              text translated
            </Text>
            <Text
              onPress={[Function]}
              style={
                {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "opacity": 1,
                  "paddingTop": 25,
                }
              }
            >
              text translated
            </Text>
          </View>
        </View>
      </RCTScrollView>
      <View
        style={
          {
            "backgroundColor": "#010101",
            "bottom": 5,
            "flexDirection": "row",
            "padding": 10,
            "position": "absolute",
          }
        }
      >
        <Text
          style={
            {
              "color": "rgb(216, 216, 216)",
              "fontSize": 8,
            }
          }
        >
          Version : 
        </Text>
        <Text
          style={
            {
              "color": undefined,
              "fontSize": 8,
            }
          }
        >
          text translated
        </Text>
        <Text
          style={
            {
              "color": "rgb(216, 216, 216)",
              "fontSize": 8,
              "marginLeft": 10,
            }
          }
        >
          text translatedtext translated
        </Text>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      {
        "backgroundColor": "transparent",
        "flex": 1,
        "height": 1334,
        "left": 0,
        "overflow": "hidden",
        "position": "absolute",
        "top": 0,
        "transform": [
          {
            "translateX": 0,
          },
        ],
        "width": 750,
      }
    }
  >
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <View />
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#011401",
          "display": "flex",
          "height": "100%",
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        color="#18bd18"
        size="large"
      />
    </View>
  </View>
</View>
`;
