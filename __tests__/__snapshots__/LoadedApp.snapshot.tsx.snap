// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component LoadedApp - test LoadedApp - snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "right": 250,
        },
      ]
    }
  >
    <View>
      <Text>
        Loading...
      </Text>
    </View>
  </View>
  <View
    collapsable={false}
    forwardedRef={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
        "height": 1334,
        "left": 0,
        "overflow": "hidden",
        "position": "absolute",
        "top": 0,
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
        "width": 750,
      }
    }
  >
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <Modal
      animationType="slide"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      transparent={false}
      visible={false}
    />
    <View />
    <MockedBottomTabNavigator
      initialRouteName="text traslated"
      screenOptions={
        Object {
          "headerShown": false,
          "tabBarStyle": Object {
            "borderTopColor": "#011401",
            "borderTopWidth": 0,
            "height": 0,
          },
        }
      }
    >
      <MockedScreen
        name="text traslated"
      />
    </MockedBottomTabNavigator>
  </View>
</View>
`;
