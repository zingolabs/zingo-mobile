// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component ImportKey - test Matches the snapshot ImportKey 1`] = `
<RCTSafeAreaView
  style={
    {
      "alignItems": "stretch",
      "backgroundColor": "rgb(242, 242, 242)",
      "display": "flex",
      "height": "100%",
      "justifyContent": "flex-start",
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "rgb(255, 255, 255)",
        "display": "flex",
        "padding": 10,
      }
    }
  >
    <Image
      source={
        {
          "testUri": "../../../assets/img/logobig-zingo.png",
        }
      }
      style={
        {
          "height": 80,
          "resizeMode": "contain",
          "width": 80,
        }
      }
    />
    <View
      style={
        {
          "alignItems": "baseline",
          "flexDirection": "row",
          "opacity": 0.5,
        }
      }
    >
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 36,
          }
        }
      >
        á™‡
      </Text>
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 36,
            "fontWeight": "700",
          }
        }
      >
         1.1234
      </Text>
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 18,
            "paddingBottom": 0,
          }
        }
      >
        5678
      </Text>
      <Text
        style={
          {
            "color": undefined,
            "fontSize": 36,
          }
        }
      >
         ZEC
      </Text>
    </View>
    <Text
      style={
        {
          "color": "rgb(28, 28, 30)",
          "fontSize": 18,
          "fontWeight": "600",
          "marginTop": 5,
          "opacity": 1,
          "padding": 5,
        }
      }
    >
      text translated
    </Text>
    <View
      style={
        {
          "backgroundColor": "rgb(0, 122, 255)",
          "height": 1,
          "width": "100%",
        }
      }
    />
  </View>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={false}
    visible={false}
  />
  <RCTScrollView
    contentContainerStyle={
      {
        "alignItems": "center",
        "flexDirection": "column",
        "justifyContent": "flex-start",
      }
    }
    keyboardShouldPersistTaps="handled"
    style={
      {
        "maxHeight": "85%",
      }
    }
  >
    <View>
      <Text
        style={
          {
            "color": "rgb(28, 28, 30)",
            "fontSize": 18,
            "fontWeight": "600",
            "margin": 10,
            "opacity": 1,
          }
        }
      >
        text translated
      </Text>
      <View
        accessibilityLabel="text translated"
        accessible={true}
        style={
          {
            "borderColor": "rgb(216, 216, 216)",
            "borderRadius": 10,
            "borderWidth": 1,
            "maxWidth": "95%",
            "minHeight": 100,
            "minWidth": "95%",
            "padding": 10,
          }
        }
      >
        <TextInput
          editable={true}
          multiline={true}
          onChangeText={[Function]}
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontWeight": "600",
              "marginLeft": 5,
              "minHeight": 100,
              "minWidth": "95%",
            }
          }
          value=""
        />
      </View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <
          color="rgb(216, 216, 216)"
          icon={
            {
              "icon": [
                448,
                512,
                [],
                "f029",
                "M48 32C21.5 32 0 53.5 0 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H48zm80 64v64H64V96h64zM48 288c-26.5 0-48 21.5-48 48v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V336c0-26.5-21.5-48-48-48H48zm80 64v64H64V352h64zM256 80v96c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48H304c-26.5 0-48 21.5-48 48zm64 16h64v64H320V96zm32 352v32h32V448H352zm96 0H416v32h32V448zM416 288v32H352V288H256v96 96h64V384h32v32h96V352 320 288H416z",
              ],
              "iconName": "qrcode",
              "prefix": "fas",
            }
          }
          size={50}
          style={
            {
              "margin": 5,
            }
          }
        />
      </View>
      <Text
        style={
          {
            "color": "rgb(28, 28, 30)",
            "fontSize": 18,
            "fontWeight": "600",
            "marginTop": 50,
            "opacity": 1,
            "textAlign": "center",
          }
        }
      >
        text translated
      </Text>
      <Text
        style={
          {
            "color": "rgb(28, 28, 30)",
            "opacity": 0.65,
          }
        }
      >
        text translated
      </Text>
      <View
        accessibilityLabel="text translated"
        accessible={true}
        style={
          {
            "borderColor": "rgb(216, 216, 216)",
            "borderRadius": 5,
            "borderWidth": 1,
            "margin": 10,
            "maxWidth": "50%",
            "minHeight": 48,
            "minWidth": "50%",
            "padding": 10,
          }
        }
      >
        <TextInput
          editable={true}
          keyboardType="numeric"
          onChangeText={[Function]}
          placeholder="#"
          style={
            {
              "color": "rgb(28, 28, 30)",
              "fontWeight": "600",
              "marginLeft": 5,
              "minHeight": 48,
              "minWidth": "50%",
            }
          }
          value="0"
        />
      </View>
      <Text
        style={
          {
            "color": "rgb(28, 28, 30)",
            "fontSize": 18,
            "fontWeight": "600",
            "margin": 20,
            "marginBottom": 30,
            "opacity": 1,
          }
        }
      >
        text translated
      </Text>
    </View>
  </RCTScrollView>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "flexGrow": 1,
        "justifyContent": "center",
        "marginVertical": 5,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "rgb(0, 122, 255)",
          "borderColor": "rgb(0, 122, 255)",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "maxWidth": "90%",
          "minHeight": 48,
          "minWidth": "30%",
          "opacity": 1,
          "padding": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "margin": 0,
            "minHeight": 48,
            "minWidth": 48,
            "padding": 0,
          }
        }
      >
        <Text
          style={
            {
              "color": "rgb(242, 242, 242)",
              "fontSize": 16,
              "fontWeight": "bold",
              "textTransform": "uppercase",
            }
          }
        >
          text translated
        </Text>
      </View>
    </View>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "borderColor": "rgb(0, 122, 255)",
          "borderRadius": 10,
          "borderWidth": 2,
          "justifyContent": "center",
          "marginLeft": 10,
          "maxWidth": "90%",
          "minHeight": 48,
          "minWidth": "30%",
          "opacity": 1,
          "padding": 0,
          "paddingLeft": 20,
          "paddingRight": 20,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "center",
            "margin": 0,
            "minHeight": 48,
            "minWidth": 48,
            "padding": 0,
          }
        }
      >
        <Text
          style={
            {
              "color": "rgb(0, 122, 255)",
              "fontSize": 16,
              "fontWeight": "bold",
              "textTransform": "uppercase",
            }
          }
        >
          text translated
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
